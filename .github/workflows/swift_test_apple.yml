name: Swift Test (Apple)

on:
  workflow_call:
    inputs:
      scheme:
        required: true
        type: string
      # Valid options are: iOS, macOS, tvOS, watchOS
      platform:
        required: true
        type: string
      # Valid options are: 12.x and 13.x
      xcode_version:
        required: true
        type: string
      # Valid options are: swift, xcodebuild
      build_method:
        required: false
        type: string
        default: xcodebuild
      output_directory:
        required: false
        type: string
        default: deploy
      subcommand:
        required: false
        type: string
        default: test

env:
  LC_ALL: en_US.UTF-8
  LANG: en_US.UTF-8

jobs:
  swift_test:
    name: ${{ inputs.build_method }} test (${{ inputs.platform }}, Xcode ${{ inputs.xcode_version }})
    # Available Runners: https://github.com/actions/virtual-environments
    runs-on: ${{ startsWith(inputs.xcode_version, '12') && 'macos-11' || 'macos-12' }}
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Setup Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ inputs.xcode_version }}
      - name: Swift Version Check
        run: swift --version
      - name: Run Tests
        # Download and run our swift_test script. Note that "bash -s --" is explicitly required before arguments.
        # TODO: the --output command here is brittle since it can pass an empty string and break the next argument.
        run: curl -sL https://raw.githubusercontent.com/bdrelling/workflows/main/scripts/swift_test.sh | bash -s -- --scheme ${{ inputs.scheme }} --method ${{ inputs.build_method }} --platform ${{ inputs.platform }} --output ${{ inputs.output_directory }} --subcommand ${{ inputs.subcommand }}
      - name: Upload Step Output
        uses: actions/upload-artifact@v1
        if: always()
        with:
          name: Output (${{ inputs.platform }}, Xcode ${{ inputs.xcode_version }})
          path: ${{ inputs.output_directory }}
      # TODO: Troubleshooting
      - run: echo job_status ${{ job.status }}
